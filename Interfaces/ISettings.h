//
//  ISettings.h
//  MacSimpe
//
//  Translated from ISettings.cs
//
// ***************************************************************************
// *   Copyright (C) 2005 by Ambertation                                     *
// *   quaxi@ambertation.de                                                  *
// *                                                                         *
// *   Objective-C translation Copyright (C) 2025 by GramzeSweatShop         *
// *   rhiamom@mac.com                                                       *
// *                                                                         *
// *   This program is free software; you can redistribute it and/or modify  *
// *   it under the terms of the GNU General Public License as published by  *
// *   the Free Software Foundation; either version 2 of the License, or     *
// *   (at your option) any later version.                                   *
// *                                                                         *
// *   This program is distributed in the hope that it will be useful,       *
// *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
// *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
// *   GNU General Public License for more details.                          *
// *                                                                         *
// *   You should have received a copy of the GNU General Public License     *
// *   along with this program; if not, write to the                         *
// *   Free Software Foundation, Inc.,                                       *
// *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
// ***************************************************************************

#import <Foundation/Foundation.h>
#import <AppKit/AppKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * The Interface for custom Settings
 */
@protocol ISettings <NSObject>

/**
 * Returns a short describing String
 * @note This is explicit listed in the Interface description, as you should return a String (best would be Name)
 * that identifies the Topic. This will resemble the Menu name
 * @returns A Describing String for the Settings
 */
- (NSString *)description;

/**
 * A 32x32 Image, that is displayed as an Icon for this Custom Setting
 * @returns nil or a valid NSImage
 */
@property (nonatomic, readonly, nullable) NSImage *icon;

/**
 * Called whenever the Settings get displayed. The Object is passed to a Property interface,
 * which means, that all public properties of that Object can be changed by the Users.
 * @returns Object that contains the Settings provided to the Users
 * @note See NSUserDefaults and property attributes for further Options on macOS
 */
- (id)getSettingsObject;

@optional

/**
 * Called when you should make the Settings persistent, like storing them to Disc
 * @param settingsObject The settings Object, that needs to get saved (this is an Object
 * generated by a call to getSettingsObject).
 * @note This method is optional - many implementations may handle persistence automatically
 */
- (void)saveSettings:(id)settingsObject;

@end

NS_ASSUME_NONNULL_END
